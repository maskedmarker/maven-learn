<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ch20-plugins</artifactId>
        <groupId>org.example.learn.maven</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>ch21-plugin-resource</artifactId>
    <description>演示ant-style path matching</description>

    <profiles>
        <profile>
            <id>base</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <!-- 以resources为root的目录树中, level=1的节点名的pattern是*.properties的文件-->
                            <include>*.properties</include>
                        </includes>
                    </resource>
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <!-- 以resources为root的目录树中, level=1的节点名的pattern是empty的文件(不包含文件夹) -->
                            <include>empty</include>
                        </includes>
                    </resource>
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <!-- 以resources为root的目录树中,level=1的节点名为config,level=2的节点名的pattern是*的文件(不包含config下的文件夹). 输出时携带了父文件夹(config)-->
                            <include>config/*</include>
                        </includes>
                    </resource>
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <!-- 以resources为root的目录树中,level=1的节点名为mapper,level=N(N>1)的节点名的pattern是*的文件(不包含config下的文件夹). 输出时携带了父文件夹(config)-->
                            <include>mapper/**</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>base-1</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <!-- mapper/**/* 等价于 mapper/**-->
                            <include>mapper/**/*</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>base-2</id>
            <build>
                <resources>
                    <resource>
                        <!-- 这样避免了带config -->
                        <directory>src/main/resources/config</directory>
                        <includes>
                            <include>*</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>base-3</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources/config</directory>
                        <!-- 指定输出到 ${build.directory}/config目录下 -->
                        <targetPath>config</targetPath>
                        <includes>
                            <include>*</include>
                        </includes>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>base-4</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <includes>
                            <include>mapper/**/*</include>
                        </includes>
                        <excludes>
                            <!-- 当include与exclude冲突时,exclude优先级更高 -->
                            <exclude>mapper/**/mybatis*</exclude>
                        </excludes>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>

</project>